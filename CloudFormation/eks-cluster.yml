AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for EKS cluster and node groups'

Parameters:
  EnvironmentName:
    Description: Environment name that will be prefixed to resource names
    Type: String
    Default: dev

  ClusterName:
    Description: Name of the EKS cluster
    Type: String
    Default: dev-eks-cluster

  KubernetesVersion:
    Description: Kubernetes version for EKS cluster
    Type: String
    Default: 1.28

  NodeGroupInstanceType:
    Description: EC2 instance type for EKS nodes
    Type: String
    Default: t3.medium

  NodeGroupDesiredCapacity:
    Description: Desired capacity for EKS node group
    Type: Number
    Default: 2

  NodeGroupMinSize:
    Description: Minimum size for EKS node group
    Type: Number
    Default: 1

  NodeGroupMaxSize:
    Description: Maximum size for EKS node group
    Type: Number
    Default: 4

Resources:
  # EKS Cluster
  EksCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: !Ref KubernetesVersion
      RoleArn: 
        Fn::ImportValue: !Sub ${EnvironmentName}-EksClusterRoleArn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref EksClusterSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
          - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2
          - Fn::ImportValue: !Sub ${EnvironmentName}-PublicSubnet1
          - Fn::ImportValue: !Sub ${EnvironmentName}-PublicSubnet2
        EndpointPublicAccess: true
        EndpointPrivateAccess: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-eks-cluster

  # EKS Cluster Security Group
  EksClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EKS cluster
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-eks-cluster-sg

  # EKS Node Group
  EksNodeGroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EksCluster
    Properties:
      ClusterName: !Ref ClusterName
      NodegroupName: !Sub ${EnvironmentName}-node-group
      NodeRole:
        Fn::ImportValue: !Sub ${EnvironmentName}-EksNodeGroupRoleArn
      SubnetIds:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2
      InstanceTypes:
        - !Ref NodeGroupInstanceType
      ScalingConfig:
        MinSize: !Ref NodeGroupMinSize
        DesiredSize: !Ref NodeGroupDesiredCapacity
        MaxSize: !Ref NodeGroupMaxSize
      Tags:
        Name: !Sub ${EnvironmentName}-eks-nodegroup

Outputs:
  EksClusterName:
    Description: EKS Cluster Name
    Value: !Ref ClusterName
    Export:
      Name: !Sub ${EnvironmentName}-EksClusterName

  EksClusterEndpoint:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EksCluster.Endpoint
    Export:
      Name: !Sub ${EnvironmentName}-EksClusterEndpoint

  EksClusterSecurityGroupId:
    Description: EKS Cluster Security Group ID
    Value: !Ref EksClusterSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-EksClusterSecurityGroupId

  EksNodeGroupId:
    Description: EKS Node Group ID
    Value: !Ref EksNodeGroup
    Export:
      Name: !Sub ${EnvironmentName}-EksNodeGroupId