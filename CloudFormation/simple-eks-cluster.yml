AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simple EKS Cluster'

Parameters:
  EnvironmentName:
    Description: Environment name
    Type: String
    Default: dev
  
  ClusterName:
    Description: Name of the EKS cluster
    Type: String
    Default: simple-eks-cluster

Resources:
  EksCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: '1.27'
      RoleArn: !GetAtt EksClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !GetAtt EksSecurityGroup.GroupId
        SubnetIds:
          - Fn::ImportValue: !Sub ${EnvironmentName}-PublicSubnet1
          - Fn::ImportValue: !Sub ${EnvironmentName}-PublicSubnet2
          - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
          - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2
        EndpointPublicAccess: true
        EndpointPrivateAccess: true

  EksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EksSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EKS cluster
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

Outputs:
  EksClusterName:
    Description: EKS Cluster Name
    Value: !Ref ClusterName
    
  EksClusterEndpoint:
    Description: EKS Cluster Endpoint
    Value: !GetAtt EksCluster.Endpoint